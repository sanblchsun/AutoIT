; HtmlHelp_demo.au3 - demo of HtmlHelp.au3 (help system)
; This demo requires:
;	o  demo help file "HtmlHelp UDF.chm", and
;	o  the HtmlHelp UDF "HtmlHelp.au3"
; present in the same folder.  If this UDF get published(!), then the #include might change.

#include <GUIConstantsEx.au3>
#include <WindowsConstants.au3>
#include <Misc.au3>
#include "HtmlHelp.au3"

AutoItSetOption("MustDeclareVars",1)
AutoItSetOption ("TrayIconHide",1)
AutoItSetOption ("GUICloseOnESC",0)

Const $sHelpPath="HtmlHelp UDF.chm"
Const $sTextTopicPath="/Popup_topics.txt"
Dim $hGUI,$iWmsg ; handle to GUI, Windows message from message loop
Dim $iTabs,$iJustContents,$iIndex,$iIndexKeyword,$iSearch,$iSearchExec ; Tabs menu
Dim $iTopic,$iHHocx,$iHidden ; Topic menu
Dim $iPopup,$iPopText,$iPopWonky,$iPopXplor,$iPopID ; Popup menu
Dim $iHelp,$iContents,$iContentsChild,$iCloseAll,$iWhatsThis; Help menu
Dim $iBtn1,$iBtn4,$iBtn7,$iBtnMsgBox ; buttons
Dim $iChkBox ; checkbox
Dim $iDummy ; for handling F1 help
Dim $hUser32 ; handle to user32.dll, for _IsPressed()

Dim $iTopicID=0 ; for context-sensitive demo, default is "Welcome"
Const $csPopup="Welcome to the HtmlHelp UDF!  This popup was generated by the"& _
		" '_HHPopupText' function using an explicit text string."

; The following variables are used by 'What's This?' help for controls.
Dim $bInWTHelp=False ; if true, a 'What's This?' has been initiated, waiting for mouse click
Dim $aiCtrlHelp[1][2] ; array of CtrlID/TopicID pairs for "What's This?" help, built 'on the fly'
Dim $iCtrlHelpCount=0 ; number of pairs in $aiCtrlHelp

; ------------------------------------------------------------------------------------------------

Func addCtrlIDHelpID($iCtrlID,$iTopicID) ; add a pair to $aiCtrlHelp
;	Local $hCtrl=ControlGetHandle($hGUI,"",$iCtrlID)
	$iCtrlHelpCount+=1
	ReDim $aiCtrlHelp[($iCtrlHelpCount)][2] ; make room for pair
	$aiCtrlHelp[$iCtrlHelpCount-1][0]=$iCtrlID
	$aiCtrlHelp[$iCtrlHelpCount-1][1]=$iTopicID
EndFunc ; addCtrlIDHelpID()
	
; ------------------------------------------------------------------------------------------------

Func CreateMenuItemEx($sHdg,$iMnu,$iTopicID) ; create item, then add ID to 'database'
	Local $iCtrlID = GUICtrlCreateMenuItem($sHdg,$iMnu)
	addCtrlIDHelpID($iCtrlID,$iTopicID)
	Return $iCtrlID
EndFunc ; CreateMenuItemEx()

; ------------------------------------------------------------------------------------------------

Func buildGUI() ; build and display main GUI
; form is centered (-1,-1)
	$hGUI=GUICreate("HtmlHelp Demo",400,220,-1,-1) ; 'normal' window
	$iTabs=GUICtrlCreateMenu("Ta&bs")
		$iJustContents=CreateMenuItemEx("&Contents tab",$iTabs,100)
			GUICtrlCreateMenuItem("",$iTabs)
		$iIndex=CreateMenuItemEx("&Index tab",$iTabs,101)
		$iIndexKeyword=CreateMenuItemEx("Index tab (using 't' as keyword)",$iTabs,102)
			GUICtrlCreateMenuItem("",$iTabs)
		$iSearch=CreateMenuItemEx("&Search tab",$iTabs,103)
		$iSearchExec=CreateMenuItemEx("&Search tab (search for 'navigation')",$iTabs,104)

	$iTopic=GUICtrlCreateMenu("&Topic")
		$iHHocx=CreateMenuItemEx("__HHoc&x (using ID)",$iTopic,200)
		$iHidden=CreateMenuItemEx("Hidden (using &URL)",$iTopic,201)

	$iPopup=GUICtrlCreateMenu("&Popup")
		$iPopText=CreateMenuItemEx("'Welcome', etc. (using explicit &text)",$iPopup,300)
		$iPopWonky=CreateMenuItemEx("&Wonky popup",$iPopup,301)
			GUICtrlCreateMenuItem("",$iPopup)
		$iPopXplor=CreateMenuItemEx("From &Explorer.exe (using resource string)",$iPopup,302)
			GUICtrlCreateMenuItem("",$iPopup)
		$iPopID=CreateMenuItemEx("From HtmlHelp UDF.chm (using &ID)",$iPopup,303)

	$iHelp=GUICtrlCreateMenu("&Help")
		$iContents=CreateMenuItemEx("&Contents (Welcome, using DispTOC)",$iHelp,400)
		$iContentsChild=CreateMenuItemEx("&Welcome (Open 1st time as child window)",$iHelp,401)
		$iCloseAll=CreateMenuItemEx("Close &All 'child' help windows",$iHelp,402)
			GUICtrlCreateMenuItem("",$iHelp)
		$iWhatsThis=CreateMenuItemEx("&What's This?",$iHelp,403)

	GUICtrlCreateLabel("Just click a button, then press F1, default is $iTopicID=0"&@CRLF& _
		"Use Shift+F1 for 'What's This? (help about controls and menu items)",50,10)
	$iBtn1=GUICtrlCreateButton("TopicID = 1",50,40)
		addCtrlIDHelpID($iBtn1,2)
		GUICtrlCreateLabel("__HHocx",130,45)
	$iBtn4=GUICtrlCreateButton("TopicID = 4",50,70)
		addCtrlIDHelpID($iBtn4,3)
		GUICtrlCreateLabel("_HHCloseAll",130,75)
	$iBtn7=GUICtrlCreateButton("TopicID = 7",50,100)
		addCtrlIDHelpID($iBtn7,4)
		GUICtrlCreateLabel("_HHDispTOC",130,105)
	$iBtnMsgBox=GUICtrlCreateButton("Open a MessageBox",50,150)
		addCtrlIDHelpID($iBtnMsgBox,5)
	$iChkBox=GUICtrlCreateCheckbox("Show HELPINFO instead",170,153)
		addCtrlIDHelpID($iChkBox,6)

	GUISetState(@SW_SHOW)
EndFunc ; buildGUI()

; ------------------------------------------------------------------------------------------------

Func doMsgBox() ; open a message box - probably shouldn't do this from messageloop()
	MsgBox(16384,"Help from MsgBox","Click the Help button",0,$hGUI)
EndFunc ; doMsgBox()

; ------------------------------------------------------------------------------------------------

Func showHELPINFO($aiData) ; open (another) messagebox with HELPINFO data
	Local $sMsg="[0] Size: "&$aiData[0]& @CRLF & _
				"[1] ContextType: "&$aiData[1]& @CRLF & _
				"[2] CtrlId: "&$aiData[2]& @CRLF & _
				"[3] Handle : "&$aiData[3]& @CRLF & _
				"[4] ContextId : "&$aiData[4]& @CRLF & _
				"[5] mouse X : "&$aiData[5]& @CRLF & _
				"[6] mouse Y : "&$aiData[6]
	MsgBox(64,"$aiHELPINFO Array",$sMsg,0,$hGUI)
EndFunc ; showHELPINFO()

; ------------------------------------------------------------------------------------------------

Func WM_HELP_hdlr($hWnd,$msgID,$wParam,$lParam) ; handles WM_HELP sent by F1 and MsgBox button
; The $lParam field contains a pointer to a HELPINFO structure, which contains information about
; the message sender, but for our purposes here, we are going to ignore all that and just open
; the Help file at the "Message Box" page (topicID=0) if the MsgBox Help button was pressed, and
; use $iTopicID (context sensitive help) for F1.
	Local $aiHELPINFO=_DecodeHELPINFO($lParam) ; not used here - see _DecodeHELPINFO in demo CHM.

	If _IsPressed("70",$hUser32) Then ; F1 pressed?
		If _IsPressed("10",$hUser32) Then ; Shift pressed? Yes, 'turn on' "What's This?" help
			GUISetCursor(4,1,$hGUI) ; Help cursor, over-ride (except menus)
			$bInWTHelp=True ; waiting for a mouse click
		Else
			_HHOpenTopicByID($sHelpPath,$iTopicID) ; F1 - just open whatever topic is there!
		EndIf
	Else ; default to MsgBox Help button
		If GUICtrlRead($iChkBox)=$GUI_CHECKED Then
			showHELPINFO($aiHELPINFO) ; just show the data passed in HELPINFO
		Else
			_HHOpenTopicByURL($sHelpPath,"/misc/msgbox.htm")
		EndIf
	EndIf
EndFunc ; WM_HELP_hdlr()

; ------------------------------------------------------------------------------------------------

Func WTthelp() ; handle user's choice for What's This? help
; This function will get called for every message loop!  Might not be the proper message.
	Local $i=0,$bFound=False
	Local $iEnd=UBound($aiCtrlHelp)-1 ; last index, Local might speed things up
	While (Not $bFound) And ($i<=$iEnd)
		If $iWmsg=$aiCtrlHelp[$i][0] Then
			$bFound=True
		Else
			$i+=1
		EndIf
	WEnd
	If $bFound Then ; ie. $iWmsg was a known control, for What's This? help, else - do nothing
; display text popup (What's This?) help at mouse position
		_HHPopupID($sHelpPath&"::"&$sTextTopicPath,$aiCtrlHelp[$i][1],MouseGetPos(0),MouseGetPos(1))
		GUISetCursor(2) ; restore cursor
		$bInWTHelp=False ; cancel What's This? help
		$iWmsg=0 ; = WM_NULL, null message - prevents rest of messageloop() from handling controlID		
	EndIf
EndFunc ; contexthelp()

; ------------------------------------------------------------------------------------------------

Func messageloop() ; get and process Windows messages
	While True
		$iWmsg=GUIGetMsg() ; get messages
; handle termination before any 'monkeying'
		If $iWmsg=$GUI_EVENT_CLOSE Then ; close button
			_HHClose() ; un-initialize/close help system
			DllClose($hUser32)
			GUIDelete($hGUI)
			Exit			
		EndIf

; simple key handlers for "What's This?" help
		If $bInWTHelp Then ; waiting to choose control
			If _IsPressed("1B",$hUser32) Then ; Escape key
				GUISetCursor(2) ; restore cursor
				$bInWTHelp=False ; cancel What's This? help
			Else
				WTthelp() ; $iWmsg is global, no need to pass
			EndIf
		EndIf

		Switch $iWmsg; and process messages...
			Case $iJustContents ; Tabs/Contents tab
				_HHDispTOC($sHelpPath) ; just switch tabs, no change to topic

			Case $iIndex ; Tabs/Index tab
				_HHDispIndex($sHelpPath) ; just switch tabs, no keyword

			Case $iIndexKeyword ; Tabs/Index tab with keyword
				_HHDispIndex($sHelpPath,"t") ; switch tabs, keyword = "t"

			Case $iSearch ; Tabs/Search tab
				_HH_DispSearch($sHelpPath)

			Case $iSearchExec ; Tabs/Search tab -> "navigation"
				_HH_DispSearch($sHelpPath,"navigation",1)

			Case $iHHocx ; Topic/HHocx
				_HHOpenTopicByID($sHelpPath,1) ; open using topicID

			Case $iHidden ; Topic/Hidden
				_HHOpenTopicByURL($sHelpPath,"/hidden/hidden.htm") ; open using topicURL

			Case $iPopText ; Popup/Text
				_HHPopupText($csPopup,-1,-1,0) ; explicit text, center of window

			Case $iPopWonky ; Popup/Wonky
				_PopupSetWindow(0x00FF0000,50,0,100,0)
				_PopupSetFont(16,0x000000FF,"BOLD ITALIC")
				_HHPopupText("Nice - eh!?",-1,-1,2) ; explicit text, center of client area
				; better put it all back for next time
				_PopupSetWindow($preset,$preset,$preset,$preset,$preset)
				_PopupSetFont($preset,$preset,$preset,$preset)

			Case $iPopXplor ; Popup/Explorer
				_HHPopupResource(@WindowsDir&"\explorer.exe",581,-1,-1)

			Case $iPopID ; Popup/HtmlHelp UDF.chm
				_HHPopupID($sHelpPath&"::"&$sTextTopicPath,1,-1,-1)

			Case $iContents ; Help/Contents
				_HHDispTOC($sHelpPath) ; just open file at default, but might be open, so...
				_HHOpenTopicByID($sHelpPath,0) ; make SURE "Welcome" opens

			Case $iContentsChild ; Help/Welcome (child)
				_HHDispTOC($sHelpPath,$hGUI) ; parent hWnd passed
				_HHOpenTopicByID($sHelpPath,0,$hGUI) ; "Welcome", parent hWnd passed

			Case $iCloseAll ; Help/Close All
				_HHCloseAll() ; just closes windows, not help system

			Case $iWhatsThis ; Help/Close All
				GUISetCursor(4,1,$hGUI) ; Help cursor, over-ride (except menus)
				$bInWTHelp=True ; waiting for a mouse click

			Case $iBtn1 ; Button - $iTopicID=2
				$iTopicID=1 ; __HHocx

			Case $iBtn4 ; Button - $iTopicID=4
				$iTopicID=4 ; _HHCloseAll

			Case $iBtn7 ; Button - $iTopicID=7
				$iTopicID=7 ; _HHDispTOC

			Case $iBtnMsgBox ; Button - open a MsgBox
				doMsgBox()

		EndSwitch
	WEnd
EndFunc ; messageloop()

; MAIN -------------------------------------------------------------------------------------------

If Not FileExists($sHelpPath) Then
	MsgBox(16,"Help File",'Help file "'&$sHelpPath&'" not found')
	Exit
EndIf
buildGUI()
_HHOpen() ; initialize/open help system
$hUser32=DllOpen("user32.dll")

GUIRegisterMsg($WM_HELP,"WM_HELP_hdlr") ; 'trap' Help button message from MsgBox

messageloop() ; go!