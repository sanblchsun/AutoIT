#NoTrayIcon
#Region ;**** Directives created by AutoIt3Wrapper_GUI ****
#AutoIt3Wrapper_Icon=Star.ico
#AutoIt3Wrapper_Outfile=..\AeroTrans-X3.exe
#AutoIt3Wrapper_Compression=4
#AutoIt3Wrapper_Res_Description=Set your taskbar and start menu transparent!
#AutoIt3Wrapper_Res_Fileversion=0.1.0.0
#AutoIt3Wrapper_Res_LegalCopyright=Ichigo325
#AutoIt3Wrapper_Au3Check_Stop_OnWarning=y
#AutoIt3Wrapper_Run_Obfuscator=y
#Obfuscator_Parameters=/striponly /sci 9 /cs 0 /cn 0
#EndRegion ;**** Directives created by AutoIt3Wrapper_GUI ****

Const $inipath = @ScriptDir & "\AeroTrans-X3.ini"

If Not FileExists($inipath) Then
	FileOpen($inipath, 2)
	FileWrite(-1, "")
	FileClose(-1)
	IniWrite($inipath, "x] Do not edit this file! [x", "================", "=============" & @CRLF)
EndIf

_CheckParameters()
_MainDialog()

Func _CheckParameters()
	If $CmdLine[0] = "" Or $CmdLine[0] = 0 Then
		Return 0
	Else
		For $i = 1 To $CmdLine[0]
			If StringRegExp($CmdLine[$i], '-t[0-255]') = 1 Then _TraySetTrans($CmdLine[$i])
			If StringRegExp($CmdLine[$i], '-s[0-255]') = 1 Then _StartSetTrans($CmdLine[$i])
			If $CmdLine[$i] = "-reset" Then
				WinSetTrans("[CLASS:Shell_TrayWnd]", "", 255)
				ControlClick("[CLASS:Shell_TrayWnd]", "", "[CLASS:Button; INSTANCE:1]")
				WinSetTrans("[CLASS:DV2ControlHost]", "", 255)
				Sleep(1000)
				ControlFocus("[CLASS:Shell_TrayWnd]", "", "[CLASS:Button; INSTANCE:1]")
				IniWrite($inipath, @UserName, "Taskbar", 255)
				IniWrite($inipath, @UserName, "StartMenu", 255)
			EndIf
			If $CmdLine[$i] = "-silent" Then
				WinSetTrans("[CLASS:Shell_TrayWnd]", "", IniRead($inipath, @UserName, "Taskbar", 255))
				ControlClick("[CLASS:Shell_TrayWnd]", "", "[CLASS:Button; INSTANCE:1]")
				WinSetTrans("[CLASS:DV2ControlHost]", "", IniRead($inipath, @UserName, "StartMenu", 255))
				Sleep(1000)
				ControlFocus("[CLASS:Shell_TrayWnd]", "", "[CLASS:Button; INSTANCE:1]")
			EndIf
			If $CmdLine[$i] = "-refresh" Then ProcessClose("explorer.exe")
		Next
		Exit
	EndIf
EndFunc   ;==>_CheckParameters


Func _TraySetTrans($x)
	$x = StringTrimLeft($x, 2)
	WinSetTrans("[CLASS:Shell_TrayWnd]", "", $x)
	IniWrite($inipath, @UserName, "Taskbar", $x)
EndFunc   ;==>_TraySetTrans

Func _StartSetTrans($x)
	$x = StringTrimLeft($x, 2)
	ControlClick("[CLASS:Shell_TrayWnd]", "", "[CLASS:Button; INSTANCE:1]")
	WinSetTrans("[CLASS:DV2ControlHost]", "", $x)
	Sleep(1000)
	ControlFocus("[CLASS:Shell_TrayWnd]", "", "[CLASS:Button; INSTANCE:1]")
	IniWrite($inipath, @UserName, "StartMenu", $x)
EndFunc   ;==>_StartSetTrans

Func _MainDialog()
	Local $hGui, $Msg, $btn[2], $hSlider[2], $hX[2], $hGroup[2], $z = 0, $AccelKeys, $hDummy
	$hGui = GUICreate("AeroTrans-X3", 300, 180)
	WinSetTrans($hGui, "", 0)

	$hDummy = GUICtrlCreateDummy()

	Dim $AccelKeys[1][2] = [["^!x", $hDummy]]
	GUISetAccelerators($AccelKeys)

	;Taskbar
	$hX[0] = 255
	$hGroup[0] = GUICtrlCreateGroup("Taskbar - Transparency (" & $hX[0] & ")", 5, 5, 290, 60)
	$hSlider[0] = GUICtrlCreateSlider(10, 20, 280, 40)
	GUICtrlSetLimit($hSlider[0], 255, 0)
	GUICtrlSetTip($hSlider[0], "Move the slider to adjust the transparency")

	If IniRead($inipath, @UserName, "Taskbar", 255) = 255 Then
		GUICtrlSetData($hSlider[0], 255)
	Else
		GUICtrlSetData($hSlider[0], IniRead($inipath, @UserName, "Taskbar", 255))
		WinSetTrans("[CLASS:Shell_TrayWnd]", "", IniRead($inipath, @UserName, "Taskbar", 255))
		GUICtrlSetData($hGroup[0], "Taskbar - Transparency (" & IniRead($inipath, @UserName, "Taskbar", 255) & ")")
	EndIf

	;Startmenu slider
	$hX[1] = 255
	$hGroup[1] = GUICtrlCreateGroup("Start Menu (WinXP only) - Transparency (" & $hX[1] & ")", 5, 73, 290, 60)
	$hSlider[1] = GUICtrlCreateSlider(10, 88, 280, 40)
	GUICtrlSetLimit($hSlider[1], 255, 0)
	GUICtrlSetTip($hSlider[1], "Move the slider to adjust the transparency")
	If @OSVersion <> "WIN_XP" Then GUICtrlSetState($hSlider[1], 128)

	If IniRead($inipath, @UserName, "StartMenu", 255) = 255 Then
		GUICtrlSetData($hSlider[1], 255)
	Else
		GUICtrlSetData($hSlider[1], IniRead($inipath, @UserName, "StartMenu", 255))
		ControlClick("[CLASS:Shell_TrayWnd]", "", "[CLASS:Button; INSTANCE:1]")
		WinSetTrans("[CLASS:DV2ControlHost]", "", IniRead($inipath, @UserName, "StartMenu", 255))
		GUICtrlSetData($hGroup[1], "Start Menu (WinXP only) - Transparency (" & IniRead($inipath, @UserName, "StartMenu", 255) & ")")
	EndIf

	GUICtrlCreateLabel("Created by Ichigo325", 15, 155, 140, 50)
	GUICtrlSetFont(-1, 9, 525, 1, "Tahoma")
	GUICtrlSetColor(-1, 0x0000ff)
	$btn[1] = GUICtrlCreateButton("O&k", 152, 150, 70, 25, 0x0001)
	$btn[0] = GUICtrlCreateButton("Cancel", 225, 150, 70, 25)

	GUISetState()
	For $i = 0 To 255 Step 15
		WinSetTrans($hGui, "", $i)
		Sleep(25)
	Next

	_ReduceMem()

	Do
		$Msg = GUIGetMsg()

		$z = $z + 1
		If $z = 2000 Then
			_ReduceMem()
			$z = 0
		EndIf

		If $Msg = $hDummy Then
			ProcessClose("explorer.exe")
			Sleep(5000)
			If GUICtrlRead($hSlider[0]) <> 255 Then
				WinSetTrans("[CLASS:Shell_TrayWnd]", "", GUICtrlRead($hSlider[0]))
			EndIf
			If GUICtrlRead($hSlider[1]) <> 255 Then
				ControlClick("[CLASS:Shell_TrayWnd]", "", "[CLASS:Button; INSTANCE:1]")
				WinSetTrans("[CLASS:DV2ControlHost]", "", GUICtrlRead($hSlider[1]))
				Sleep(1000)
				ControlFocus("[CLASS:Shell_TrayWnd]", "", "[CLASS:Button; INSTANCE:1]")
			EndIf
		EndIf

		If $Msg = $hSlider[0] Then
			WinSetTrans("[CLASS:Shell_TrayWnd]", "", GUICtrlRead($hSlider[0]))
			$hX[0] = GUICtrlRead($hSlider[0])
			GUICtrlSetData($hGroup[0], "Taskbar - Transparency (" & $hX[0] & ")")
		EndIf

		If $Msg = $hSlider[1] Then
			ControlClick("[CLASS:Shell_TrayWnd]", "", "[CLASS:Button; INSTANCE:1]")
			WinSetTrans("[CLASS:DV2ControlHost]", "", GUICtrlRead($hSlider[1]))
			$hX[1] = GUICtrlRead($hSlider[1])
			GUICtrlSetData($hGroup[1], "Start Menu (WinXP only) - Transparency (" & $hX[1] & ")")
		EndIf

		If $Msg = $btn[1] Then
			IniWrite($inipath, @UserName, "Taskbar", GUICtrlRead($hSlider[0]))
			IniWrite($inipath, @UserName, "StartMenu", GUICtrlRead($hSlider[1]))
			ControlFocus("[CLASS:Shell_TrayWnd]", "", "[CLASS:Button; INSTANCE:1]")
			Exit
		EndIf
	Until $Msg = -3 Or $Msg = $btn[0]

	If @OSVersion = "WIN_XP" Then ControlFocus("[CLASS:Shell_TrayWnd]", "", "[CLASS:Button; INSTANCE:1]")

	If IniRead($inipath, @UserName, "TaskBar", "") <> "" Then
		WinSetTrans("[CLASS:Shell_TrayWnd]", "", IniRead($inipath, @UserName, "TaskBar", ""))
	Else
		WinSetTrans("[CLASS:Shell_TrayWnd]", "", 255)
	EndIf

	If IniRead($inipath, @UserName, "StartMenu", "") <> "" Then
		WinSetTrans("[CLASS:DV2ControlHost]", "", IniRead($inipath, @UserName, "StartMenu", ""))
	Else
		WinSetTrans("[CLASS:DV2ControlHost]", "", 255)
	EndIf

	For $i = 255 To 0 Step -15
		WinSetTrans($hGui, "", $i)
		Sleep(25)
	Next
EndFunc   ;==>_MainDialog

Func _ReduceMem($PID = @AutoItPID)
	Local $ai_Handle = DllCall("kernel32.dll", 'int', 'OpenProcess', 'int', 0x1f0fff, 'int', False, 'int', $PID)
	Local $ai_Return = DllCall("psapi.dll", 'int', 'EmptyWorkingSet', 'long', $ai_Handle[0])
	DllCall('kernel32.dll', 'int', 'CloseHandle', 'int', $ai_Handle[0])
EndFunc   ;==>_ReduceMem
