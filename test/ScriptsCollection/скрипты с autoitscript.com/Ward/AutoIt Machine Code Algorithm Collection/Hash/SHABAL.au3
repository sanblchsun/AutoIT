; -----------------------------------------------------------------------------
; SHABAL Hash Machine Code UDF
; Purpose: Provide The Machine Code Version of SHABAL Hash Algorithm In AutoIt
; Author: Ward
; -----------------------------------------------------------------------------

#Include-once
#Include <Memory.au3>

Global $_SHABAL_CodeBuffer, $_SHABAL_CodeBufferMemory
Global $_SHABAL192_InitOffset, $_SHABAL192_InputOffset, $_SHABAL192_ResultOffset
Global $_SHABAL224_InitOffset, $_SHABAL224_InputOffset, $_SHABAL224_ResultOffset
Global $_SHABAL256_InitOffset, $_SHABAL256_InputOffset, $_SHABAL256_ResultOffset
Global $_SHABAL384_InitOffset, $_SHABAL384_InputOffset, $_SHABAL384_ResultOffset
Global $_SHABAL512_InitOffset, $_SHABAL512_InputOffset, $_SHABAL512_ResultOffset

Global $_HASH_SHABAL192[4] = [24, 256, '_SHABAL192_', '_SHABAL_']
Global $_HASH_SHABAL224[4] = [28, 256, '_SHABAL224_', '_SHABAL_']
Global $_HASH_SHABAL256[4] = [32, 256, '_SHABAL256_', '_SHABAL_']
Global $_HASH_SHABAL384[4] = [48, 256, '_SHABAL384_', '_SHABAL_']
Global $_HASH_SHABAL512[4] = [64, 256, '_SHABAL512_', '_SHABAL_']

Func _SHABAL_Exit()
	$_SHABAL_CodeBuffer = 0
	_MemVirtualFree($_SHABAL_CodeBufferMemory, 0, $MEM_RELEASE)
EndFunc

Func _SHABAL_Startup()
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then
		If @AutoItX64 Then
			Local $Code = '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= 'e20SmH4UEBUraxxak/UwiwgMCVO3pe5v71QO/fBpnnNOkeh+nh9r6r9+RXP1MO4rewzmS1sIC9jsUUrI1hoCmhnlK3rVpLpin7ReFuSM6jSfId0rA2pSV6mWWLaTrWCT/eefqXcLRCuE54nqNinaahRwLczqGM0wIA4rGWjIKIwIWywkMMcOazTjczgSIjyDrzBhAXUI9Ss356lE8baBJ/mETXIS35jUPVre9CEalmCjfslA9p3p+ZhFoKggtPxkQxoqcMRaLJ5tXEjT80bLNHkFbRo4p5cZBSewajyAuI5aZI9zIWwU0A3IdEXYU1zFhZRYvFakiOY8yStU2mWXMoLQgpWTGSUnWCm+pW5IvLSTJHjsilqMdw8OhXDu/z9knuk6EpbyTeyZyOhPEtc/1JzMrok5Q0iSU0z9YJ3sEsKJS0LOduYvGhlyVcb2Q1gIa0trYqYLP0GkWyVmO1J8+GKW/boZQ2SSaJlKbHZwn2F0Z8aL/R2inAchm5CYa6ejgKgLs5SRqUy7PL2tEcEvSd8oUkeDcqQjLNf580upl0S7zNWDW5yZkTuZNSP4FJOgBn5WpNRbmJW8iyFqqAmrrDEXuGN02ZSwJyVNzp5pBwibuGKzvBi7wKp0EWXIDMypV9ANGJmDWdhMy7C5h6xcuKiuq0akK6CfEZyKmJPE4GLkG8rcsYTgGOSMQ+gh7JDwyPRk/DL4KtQLc0BYsffCPp2BojHoT0IhA4mOCHEpQuvV/yvJ9sRH3if/Gg3k0WnONEa3iKqMVleSz8sG1oAKwfzzpBRfXsMQiNBmqvDAAA=='
		Else
			Local $Code = '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '2bCDl5ogVorLU4atTOCfm3F6VYEgax/u7WGYKDt0Y7j4QjI41EU8QtagfTC1lmhUNMCkjIId25KjpSdOy7/KyP0WKJxNYysDk1PHUksIiq4ub+dzDKR87IGIMJI0tkp/a0wnarawPSt7WxDmR0v2BF/Uu7k4lqaZVzQuK5E5mUMYxByZsCRsKG8kRKN4acV8Ki17w5U449KiAEbnStmKfRiXqTGQqTIgoCwEMAg0GTi+PG4ILgjjIHXWHUIMIItaYMvPIWTEPDn23NvrwhZdMhjWBsTcOOCMlWTi/1m6lh9EqLCzSCMX6BN8tvpE4oC1tN5GhMuIW9BPMbKQHLoCJTH/qQvMrFhw08+0ibzzwQ2FwCPhD901axP4+TNa8nrWtideYL6JQ0Sec89FU0i7Z/+lS61zO3iyc7K0eTiPQ1RXZqpKRVjKGVwSdAv++0xEZLbdsj5o3yy9OGyJKAJwL/+Ta5NgaGRGWlOHBrr+ZbMy9qtckMZYa50mviBembSoZymDjBoofFuTpsEySHSURZsWszZrWGlEhFyLx0Cig6BntzJqpGfSvE3tobOsYwjLq9yRxPBZgrQZM6wtk9urJMBvCrw6lcAzKsQsVMglzKRZk9qX5Ow4tbt30fXQJEfvOcy7kEy55p5O2OJW2azcO4uwZbrgIjsImcPkGAz7CQyVq6aonxrtfOZp8d+Be0CBxBxudJX4rUn7LQjkArWG7YVDmsFWcCWS/nlka0Mi3uj/jSsXIcfxsA+ImXxEglZLVxk5NHSwJD0UhcnyLwD8g/kIcif3x6uVh+ECpEm6FMIDBWalg+n4icrBzwrzXd/RDuED5qTrFuhfGV7DV3cQEDAPtsG0DGnAAbMDrQghdAMFCqpJIQp19lA//POrpEAYql/DAA=='
		EndIf
		Local $Opcode = String(_SHABAL_CodeDecompress($Code))
		$_SHABAL192_InitOffset = (StringInStr($Opcode, "89DB") - 3) / 2
		$_SHABAL192_InputOffset = (StringInStr($Opcode, "87DB") - 3) / 2
		$_SHABAL192_ResultOffset = (StringInStr($Opcode, "09DB") - 3) / 2
		$_SHABAL224_InitOffset = (StringInStr($Opcode, "89C9") - 3) / 2
		$_SHABAL224_InputOffset = (StringInStr($Opcode, "87C9") - 3) / 2
		$_SHABAL224_ResultOffset = (StringInStr($Opcode, "09C9") - 3) / 2
		$_SHABAL256_InitOffset = (StringInStr($Opcode, "89D2") - 3) / 2
		$_SHABAL256_InputOffset = (StringInStr($Opcode, "87D2") - 3) / 2
		$_SHABAL256_ResultOffset = (StringInStr($Opcode, "09D2") - 3) / 2
		$_SHABAL384_InitOffset = (StringInStr($Opcode, "89F6") - 3) / 2
		$_SHABAL384_InputOffset = (StringInStr($Opcode, "87F6") - 3) / 2
		$_SHABAL384_ResultOffset = (StringInStr($Opcode, "09F6") - 3) / 2
		$_SHABAL512_InitOffset = (StringInStr($Opcode, "89FF") - 3) / 2
		$_SHABAL512_InputOffset = (StringInStr($Opcode, "87FF") - 3) / 2
		$_SHABAL512_ResultOffset = (StringInStr($Opcode, "09FF") - 3) / 2
		$Opcode = Binary($Opcode)

		$_SHABAL_CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
		$_SHABAL_CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $_SHABAL_CodeBufferMemory)
		DllStructSetData($_SHABAL_CodeBuffer, 1, $Opcode)
		OnAutoItExitRegister("_SHABAL_Exit")
	EndIf
EndFunc

Func _SHABAL192Init()
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_SHABAL192[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL192_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc

Func _SHABAL224Init()
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_SHABAL224[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL224_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc

Func _SHABAL256Init()
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_SHABAL256[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL256_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc

Func _SHABAL384Init()
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_SHABAL384[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL384_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc

Func _SHABAL512Init()
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_SHABAL512[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL512_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc


Func _SHABAL192Input(ByRef $Context, $Data)
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL192_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _SHABAL224Input(ByRef $Context, $Data)
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL224_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _SHABAL256Input(ByRef $Context, $Data)
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL256_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _SHABAL384Input(ByRef $Context, $Data)
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL384_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _SHABAL512Input(ByRef $Context, $Data)
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL512_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _SHABAL192Result(ByRef $Context)
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_SHABAL192[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL192_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc


Func _SHABAL224Result(ByRef $Context)
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_SHABAL224[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL224_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _SHABAL256Result(ByRef $Context)
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_SHABAL256[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL256_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _SHABAL384Result(ByRef $Context)
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_SHABAL384[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL384_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _SHABAL512Result(ByRef $Context)
	If Not IsDllStruct($_SHABAL_CodeBuffer) Then _SHABAL_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_SHABAL512[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_SHABAL_CodeBuffer) + $_SHABAL512_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _SHABAL192($Data)
	Local $Context = _SHABAL192Init()
	_SHABAL192Input($Context, $Data)
	Return _SHABAL192Result($Context)
EndFunc

Func _SHABAL224($Data)
	Local $Context = _SHABAL224Init()
	_SHABAL224Input($Context, $Data)
	Return _SHABAL224Result($Context)
EndFunc

Func _SHABAL256($Data)
	Local $Context = _SHABAL256Init()
	_SHABAL256Input($Context, $Data)
	Return _SHABAL256Result($Context)
EndFunc

Func _SHABAL384($Data)
	Local $Context = _SHABAL384Init()
	_SHABAL384Input($Context, $Data)
	Return _SHABAL384Result($Context)
EndFunc

Func _SHABAL512($Data)
	Local $Context = _SHABAL512Init()
	_SHABAL512Input($Context, $Data)
	Return _SHABAL512Result($Context)
EndFunc

Func _SHABAL_CodeDecompress($Code)
	If @AutoItX64 Then
		Local $Opcode = '0x
	Else
		Local $Opcode = '0x
	EndIf
	Local $AP_Decompress = (StringInStr($Opcode, "89C0") - 3) / 2
	Local $B64D_Init = (StringInStr($Opcode, "89D2") - 3) / 2
	Local $B64D_DecodeData = (StringInStr($Opcode, "89F6") - 3) / 2
	$Opcode = Binary($Opcode)

	Local $CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
	Local $CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $CodeBufferMemory)
	DllStructSetData($CodeBuffer, 1, $Opcode)

	Local $B64D_State = DllStructCreate("byte[16]")
	Local $Length = StringLen($Code)
	Local $Output = DllStructCreate("byte[" & $Length & "]")

	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($CodeBuffer) + $B64D_Init, _
													"ptr", DllStructGetPtr($B64D_State), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	DllCall("user32.dll", "int", "CallWindowProc", "ptr", DllStructGetPtr($CodeBuffer) + $B64D_DecodeData, _
													"str", $Code, _
													"uint", $Length, _
													"ptr", DllStructGetPtr($Output), _
													"ptr", DllStructGetPtr($B64D_State))

	Local $ResultLen = DllStructGetData(DllStructCreate("uint", DllStructGetPtr($Output)), 1)
	Local $Result = DllStructCreate("byte[" & ($ResultLen + 16) & "]")

	Local $Ret = DllCall("user32.dll", "uint", "CallWindowProc", "ptr", DllStructGetPtr($CodeBuffer) + $AP_Decompress, _
													"ptr", DllStructGetPtr($Output) + 4, _
													"ptr", DllStructGetPtr($Result), _
													"int", 0, _
													"int", 0)


	_MemVirtualFree($CodeBufferMemory, 0, $MEM_RELEASE)
	Return BinaryMid(DllStructGetData($Result, 1), 1, $Ret[0])
EndFunc
