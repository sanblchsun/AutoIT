; -----------------------------------------------------------------------------
; BMW Hash Machine Code UDF
; Purpose: Provide The Machine Code Version of BMW Hash Algorithm In AutoIt
; Author: Ward
; -----------------------------------------------------------------------------

#Include-once
#Include <Memory.au3>

Global $_BMW_CodeBuffer, $_BMW_CodeBufferMemory
Global $_BMW224_InitOffset, $_BMW224_InputOffset, $_BMW224_ResultOffset
Global $_BMW256_InitOffset, $_BMW256_InputOffset, $_BMW256_ResultOffset
Global $_BMW384_InitOffset, $_BMW384_InputOffset, $_BMW384_ResultOffset
Global $_BMW512_InitOffset, $_BMW512_InputOffset, $_BMW512_ResultOffset

Global $_HASH_BMW224[4] = [28, 144, '_BMW224_', '_BMW_']
Global $_HASH_BMW256[4] = [32, 144, '_BMW256_', '_BMW_']
Global $_HASH_BMW384[4] = [48, 272, '_BMW384_', '_BMW_']
Global $_HASH_BMW512[4] = [64, 272, '_BMW512_', '_BMW_']

Func _BMW_Exit()
	$_BMW_CodeBuffer = 0
	_MemVirtualFree($_BMW_CodeBufferMemory, 0, $MEM_RELEASE)
EndFunc

Func _BMW_Startup()
	If Not IsDllStruct($_BMW_CodeBuffer) Then
		If @AutoItX64 Then
			Local $Code = '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'
				$Code &= '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'
				$Code &= 'WsSQ71teX39d21wIx284UldILYnIbRIIqAE7h4tKKExDcjh6CMgReIxYcFCMNySAOc8LtAzfEUkcMclN2fdVUANwTwiCrNAsGHpQaCpwqSLOvj7/oxuuHw9LjTQOhjH5RdCZ9TpAmwN0C/KMrDiW+6EoYBZDfAiQYhVIK7QaeCj32VHhVntERFhIod71woMbifHZ0en4McugCcHGbiUIqgQOIJRmMA7ziGH7MJwk+FYpglVQW0ZoCCBgQHlozUw4BgSsDKXPYUChW8hYwFjKJswxOkgJ3r/QG0D5FDK8eBModXQFVYw0Arz9ETgYEPgpZu722Qxl5oLOCi0oHRUwt4i1XkQrDYZVCrajDPcivt+bsiTPkYwoDEppYBglPkwicCAYeGDKVO4jEBie1f7Qn3QUD4UpuBRSIM1WfPyU9zYlIRAgdinpAoBkNUgTTPsDUpwjUNII/jNJtG2VRCGAJHFMGpT6CKl4UEXosL0wrIRAGOPKHrw8SneNKfP6pJp3FZ3vitmERSAjdcpjHxTDOyjrHA6QydDqVJoyS9kzay6a0mt+LsEyOJIo0TcraY89zDVEA5uDujT66xra5DCNKdKhLTAibSpo6lLVdiTRZVPMCcKWHObTpOVCUFVMIWnWrK4GK/eU2QPhmRUgT7poibRauqkUtEd4VJXyooMOkmrKhmi7SIQaEu+WZoSBp2YhgaRdxVQTcePkQo58gdOZfuoGy5WFGoalbzshILMQkIRIizgiAYqJCsYmNkAQNyhJqjPR67MxtWIeTImAmqAgtU6NLCrP6uJZ+yggCPINSQHVSvQ+Jl8mUer8zgbTExJJwcVIQMKzHeLVXuxS6wqBrL0rfbvUs8rJlyuSJEhsPJWTgkTPNSc6rIsrkL1l9hTXJfwJwQO67MkKOJoKZCWvjKm8s8za60kCFiIgg00B1pgpzEz9mUowFv5DCDgQROpOTVOWFFxy4s4ee01l4SNJIojWhrzyuly0jNg26gKwt2Xh6IyNt0Md0kA758ZEOxzbHTj0C5Saj04XVpyGGInMTOwCqZndMiH0nWWsHBkmM8qixCgkJJrSgZjmx/nO6UBoVBShJedeHIVKnKeIs6KqSmhgubom3a4jbCYIxGTlAoN89TIq7xTrC9KBhL7w/8pUwZgNzxtWZpJZtyFQOFQe16obBZsLiIdAsa8gKEPwTTJiPMcEAskzEXBCs82sFSMV2Bko2UnU1eJ+3u6+1JQoxR7LLSwMC4u4u1BVpAGSWoyAEI0MKWeUwT/rTarIPSJugYr37TPuxji4IaG7HMoSg2vjSZrrkS4FqRUSLNSiYvFGQswy4wIw27IbGycpYu1FEK2asbM6QmEdRk56Zf1JGV6RJLFm0TI2MekrP1A8CjOWWmwk1dI3Df/LU+oaDyZQtKWvJfEpTEMoflKMDhPB4Upy6R3sYjOtDxAV1oQUWzWQxihI7VCRF5lHLUsMKQs+kYBpzxZKitgkazPZQwsmQulDQSkQZLxS52VcA2QXKccMDBuOUwgveK+TP8PfIW0Y7psv/Wle/h75C0uERznC7kUaI8KQkOe5HiYkifWBxLU2UUjQUvY6hieh3NWQT0spEreiEY6y0jdn6+hlOHQuEjtTywu+3ylTsyn91KnCJghZmiUpTakgmaHoZj8sWBaUBR0geOtiD39QDB7AsTXC5wN4/5nIECgTyTyEdyQY1rAeRxtlN+GSsfGsJ2bOUjMMyBW7ir6lqgGeWqjQXQ8HRX8xRpfvTw/SNysrcTa8MTMQSAEXRvEvZQnw5s2IzS1cCguLLH5kOUzDcH8Q7uShg9x2RU2xQgzIC6g9+C3h8s4zzGThiOyKadfjSAoLi7+m/OZL2RaI4kxY9ZAVmT8kXAoFhlLUKSOVZNQt6joRoBiWURk1Bwkp7DMdpVkYSTNLDCEVk6Rk4c4HQqZJqUwGpC0lGbYUQITj3QZyqkJkihCSyAzkBXIImzDFeZP+HvkLZRhINy+KX9vcPfIWgZ6QTsNJ7ZMTOikEmE08CMYDpSqzJxtQHzb0WEgMyPXSDTA7'
				$Code &= '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'
				$Code &= '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'
				$Code &= 'wfzzSKTkKcMQENDJqoVM6IiToPNIAaHxGKL/GKP/GKT/GKX/GKb/GKf/GKj/GKn/Hj+rxj+sxj+txj+uxj+vxihah0dAKaF/lKN3yqVvZacyZ6mWW1OsUymuS7aOAA=='
		Else
			Local $Code = '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= 'rBUx9qqyEiSN7mK82qyc9ehjROe4eBgli1wc6Rn7BTQ5xedKO6wXCVhAGDjT+IpUFETBjTLYjUOgwPg4kDh5HyRfRC8RqD+6bwvYqmApZ8K3HKUEq4QoKX5u9OuRZAYR8IkpSWVCJ4yKMVBCRzhCNpEtPAz0QpUynmSfTiVE8hwa6CMIfYUq1hYeo0QFhdJ0JxQbFFEnFREFIJmLJQoUJSIgBHCFkR4E2HXwDqwRxrpAFYKkF6CN8QWHftJG2ko4QRzBkd1oQdlZIInR6SYWIjvIUyjWy6wmt2o33cHI4NUBMwMmEQFhhcmL4YBCHYREclON9EVYnwgUoJFGABjrBIXbdChcvScFKdU53XaHCUqYHhfd69Z0gifuqaD1C5t/GUERU5yLBSEB6oH6Bi91xh1RFKIiQAnofqopFC+ju7d0a6OYQK5fdTGlkCccOUQXMIx0DYvftAq5IItBx/OlIxbQIIXr7QjRjKEiJVmVheicBYy4kOE4wad253j25iqNkAwY17EgHMeA0H4BmBQIAYURDNKt30uLSWjsYwHDU4PsGCRWIKmiLFLGKK/BqMcJBAgzjpjY6DhR/NfrAUWDxBhb6WMlem/mP2VNCFRhvKYQWwz9T8em/x5RKcPIeVsb+AaFiHD79yRtiddWCdAGbctqe3yL+8h3y71MqS0BgcRDUpGJUPOLJlFAbRHxC4PBRF7dpGaWMBKLM2osJhEobmFYvUAbIhZEfO+JHAoQowLIHAGD+kB1yZYXKBi58SzoJleSa28xIijpHCw3dajl6ptFO4nSB4rnY9cGdUEGiEYEX80iQg7rdrbnkAwMc4EQBzgQFHOBGAc4EBxzg3NVgSQHOBAoc4EsBzgQMHOBNAc4EDhzgTwHOQQifM2+BnjpJOvvJTrh30SNQs3HnQZDn0G3DjkbY8gER0ZvRSqgCEtKSUjADgxPTk1MgBBTEFJRUAIUV1ZVVAqeBlpZWA4EHF9eXVwAIGNiYWCAJGcQZmVkAihramloACxvbm1AbDAIc3JxcAE0d3Z1dAA4e3ogeXgHPH9+fXzigohlQT0pjAqgpkxA7q9RaiMmyDR/I/dhAwIBwhwdBwYFIh0LCgkiHQ8ODSIdExIRIh0XFhUiHRsaGSIdHx4dIh0jIiEiHScmJSIdKyopIh0vLi0iHTMyMSIdNzY1Ih07OjkiHT8+PSNUQgfEjPl7gVZXi3ykLXEYELkUhXnJAC/8g/kIcif3WMexn4YCpEkU6wgFEmalg/oG38rBCpryfNE74QObpOsWpIHqw1eRdxAMMA+2xWk2wAEDrWQIdAMgCqpJpAoqdfY/FPzzq0CBql/D6HIsPKDSATyhRj+ixj+jxj+kxj+lxj+mxj+nxj+oxj+px4+r8Y+s8Y+t8Y+u8Y+v8Ypah8CHhoWEHoOCgcCPjo2Mi4oAiYiXlpWUk5IAkZCfnp2cm5oAmZinpqWko6IDoaCvrq2sALapqLe2tbSzALKxsL++vby7ALq5uMfGxcTDAMLBwM/OzczLAMrJyNfW1dTTANLR0N/e3dzbANrZ2Ofm5eTjAOLh4O/u7ezrAOrp6Pf29fTzAPLx8P/+/fz7Cvr5+F6HyRJuRICRaCRzSRJiRG2RXCRnSRJWRGGRUCRbSRJKRFWRRCRPSamlmrdkn5mqJplJkqRkk5meJo1Jkphkh5mSJoFJkoxke5mGIodJQJXJoTmNoyeFJKV95KecdamRaeSsnGGuk1moVcAA'
		EndIf
		Local $Opcode = String(_BMW_CodeDecompress($Code))
		$_BMW224_InitOffset = (StringInStr($Opcode, "89DB") - 3) / 2
		$_BMW224_InputOffset = (StringInStr($Opcode, "87DB") - 3) / 2
		$_BMW224_ResultOffset = (StringInStr($Opcode, "09DB") - 3) / 2
		$_BMW256_InitOffset = (StringInStr($Opcode, "89C9") - 3) / 2
		$_BMW256_InputOffset = (StringInStr($Opcode, "87C9") - 3) / 2
		$_BMW256_ResultOffset = (StringInStr($Opcode, "09C9") - 3) / 2
		$_BMW384_InitOffset = (StringInStr($Opcode, "89D2") - 3) / 2
		$_BMW384_InputOffset = (StringInStr($Opcode, "87D2") - 3) / 2
		$_BMW384_ResultOffset = (StringInStr($Opcode, "09D2") - 3) / 2
		$_BMW512_InitOffset = (StringInStr($Opcode, "89F6") - 3) / 2
		$_BMW512_InputOffset = (StringInStr($Opcode, "87F6") - 3) / 2
		$_BMW512_ResultOffset = (StringInStr($Opcode, "09F6") - 3) / 2
		$Opcode = Binary($Opcode)

		$_BMW_CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
		$_BMW_CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $_BMW_CodeBufferMemory)
		DllStructSetData($_BMW_CodeBuffer, 1, $Opcode)
		OnAutoItExitRegister("_BMW_Exit")
	EndIf
EndFunc

Func _BMW224Init()
	If Not IsDllStruct($_BMW_CodeBuffer) Then _BMW_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_BMW224[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_BMW_CodeBuffer) + $_BMW224_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc

Func _BMW256Init()
	If Not IsDllStruct($_BMW_CodeBuffer) Then _BMW_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_BMW256[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_BMW_CodeBuffer) + $_BMW256_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc

Func _BMW384Init()
	If Not IsDllStruct($_BMW_CodeBuffer) Then _BMW_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_BMW384[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_BMW_CodeBuffer) + $_BMW384_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc

Func _BMW512Init()
	If Not IsDllStruct($_BMW_CodeBuffer) Then _BMW_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_BMW512[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_BMW_CodeBuffer) + $_BMW512_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc


Func _BMW224Input(ByRef $Context, $Data)
	If Not IsDllStruct($_BMW_CodeBuffer) Then _BMW_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_BMW_CodeBuffer) + $_BMW224_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _BMW256Input(ByRef $Context, $Data)
	If Not IsDllStruct($_BMW_CodeBuffer) Then _BMW_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_BMW_CodeBuffer) + $_BMW256_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _BMW384Input(ByRef $Context, $Data)
	If Not IsDllStruct($_BMW_CodeBuffer) Then _BMW_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_BMW_CodeBuffer) + $_BMW384_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _BMW512Input(ByRef $Context, $Data)
	If Not IsDllStruct($_BMW_CodeBuffer) Then _BMW_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_BMW_CodeBuffer) + $_BMW512_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _BMW224Result(ByRef $Context)
	If Not IsDllStruct($_BMW_CodeBuffer) Then _BMW_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_BMW224[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_BMW_CodeBuffer) + $_BMW224_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _BMW256Result(ByRef $Context)
	If Not IsDllStruct($_BMW_CodeBuffer) Then _BMW_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_BMW256[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_BMW_CodeBuffer) + $_BMW256_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _BMW384Result(ByRef $Context)
	If Not IsDllStruct($_BMW_CodeBuffer) Then _BMW_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_BMW384[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_BMW_CodeBuffer) + $_BMW384_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _BMW512Result(ByRef $Context)
	If Not IsDllStruct($_BMW_CodeBuffer) Then _BMW_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_BMW512[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_BMW_CodeBuffer) + $_BMW512_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _BMW224($Data)
	Local $Context = _BMW224Init()
	_BMW224Input($Context, $Data)
	Return _BMW224Result($Context)
EndFunc

Func _BMW256($Data)
	Local $Context = _BMW256Init()
	_BMW256Input($Context, $Data)
	Return _BMW256Result($Context)
EndFunc

Func _BMW384($Data)
	Local $Context = _BMW384Init()
	_BMW384Input($Context, $Data)
	Return _BMW384Result($Context)
EndFunc

Func _BMW512($Data)
	Local $Context = _BMW512Init()
	_BMW512Input($Context, $Data)
	Return _BMW512Result($Context)
EndFunc

Func _BMW_CodeDecompress($Code)
	If @AutoItX64 Then
		Local $Opcode = '0x
	Else
		Local $Opcode = '0x
	EndIf
	Local $AP_Decompress = (StringInStr($Opcode, "89C0") - 3) / 2
	Local $B64D_Init = (StringInStr($Opcode, "89D2") - 3) / 2
	Local $B64D_DecodeData = (StringInStr($Opcode, "89F6") - 3) / 2
	$Opcode = Binary($Opcode)

	Local $CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
	Local $CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $CodeBufferMemory)
	DllStructSetData($CodeBuffer, 1, $Opcode)

	Local $B64D_State = DllStructCreate("byte[16]")
	Local $Length = StringLen($Code)
	Local $Output = DllStructCreate("byte[" & $Length & "]")

	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($CodeBuffer) + $B64D_Init, _
													"ptr", DllStructGetPtr($B64D_State), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	DllCall("user32.dll", "int", "CallWindowProc", "ptr", DllStructGetPtr($CodeBuffer) + $B64D_DecodeData, _
													"str", $Code, _
													"uint", $Length, _
													"ptr", DllStructGetPtr($Output), _
													"ptr", DllStructGetPtr($B64D_State))

	Local $ResultLen = DllStructGetData(DllStructCreate("uint", DllStructGetPtr($Output)), 1)
	Local $Result = DllStructCreate("byte[" & ($ResultLen + 16) & "]")

	Local $Ret = DllCall("user32.dll", "uint", "CallWindowProc", "ptr", DllStructGetPtr($CodeBuffer) + $AP_Decompress, _
													"ptr", DllStructGetPtr($Output) + 4, _
													"ptr", DllStructGetPtr($Result), _
													"int", 0, _
													"int", 0)


	_MemVirtualFree($CodeBufferMemory, 0, $MEM_RELEASE)
	Return BinaryMid(DllStructGetData($Result, 1), 1, $Ret[0])
EndFunc
