; -----------------------------------------------------------------------------
; ECHO Hash Machine Code UDF
; Purpose: Provide The Machine Code Version of ECHO Hash Algorithm In AutoIt
; Author: Ward
; -----------------------------------------------------------------------------

#Include-once
#Include <Memory.au3>

Global $_ECHO_CodeBuffer, $_ECHO_CodeBufferMemory
Global $_ECHO224_InitOffset, $_ECHO224_InputOffset, $_ECHO224_ResultOffset
Global $_ECHO256_InitOffset, $_ECHO256_InputOffset, $_ECHO256_ResultOffset
Global $_ECHO384_InitOffset, $_ECHO384_InputOffset, $_ECHO384_ResultOffset
Global $_ECHO512_InitOffset, $_ECHO512_InputOffset, $_ECHO512_ResultOffset

Global $_HASH_ECHO224[4] = [28, 280, '_ECHO224_', '_ECHO_']
Global $_HASH_ECHO256[4] = [32, 280, '_ECHO256_', '_ECHO_']
Global $_HASH_ECHO384[4] = [48, 280, '_ECHO384_', '_ECHO_']
Global $_HASH_ECHO512[4] = [64, 280, '_ECHO512_', '_ECHO_']

Func _ECHO_Exit()
	$_ECHO_CodeBuffer = 0
	_MemVirtualFree($_ECHO_CodeBufferMemory, 0, $MEM_RELEASE)
EndFunc

Func _ECHO_Startup()
	If Not IsDllStruct($_ECHO_CodeBuffer) Then
		If @AutoItX64 Then
			Local $Code = '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'
				$Code &= 'Rp8MqaU6b63LaVbLTfbcxmQ8qErpLM32F9glLInl0vckFfJdNjyEIqXHFklVPMsgqHP19u2HPcnIjKkX7M11/7yGSEkJ70yE2tR7xZaTlDilSZ4szUI/RrLjGSwLIuVB9SWaWM0GsZPRQDk/iDjvEchAV3RHqOioh35FoC0oJATTCcUHF+Mo+18gSdEYyzyqTOsV+kGS/VlBE/OEOtim7ITeMxBEKJnJptfZF+njfLrfZxlDQQSGgBTJdv4Y2DHrzRqyGF3EBQ4Q0w+01Qpf0tbtZKAf0v1KEGqKT0zsqtvupPTxkxioVuCJAeb628kbRWKT8N6ZXi0E5bKZVxa/G2WhqO2PmkpTvWWWoeu/X+vBQr5ukZqN388lucKYFjpO/3QylNsbeg369VRssmhBmThFSTwyj9RqQj1lm/85dAJxbAhuUjFqkDgsyBjw+0KcLVRDkCEIcz02MFoiF2hEtNILsXtyYa7R111er0tJIxhKYWEX/SXB2kzCSkXJCTeIJaoJaEau0poROnBcVto56ZjvOSrPaL18w9crX0yFtt1Z9YWI7bR1ieSm64J5qm1lJxgWKvdZeTZ8I6mQ4+jYnCpRCQuTCnVgWwpYSAUpxj/IvqQJv+tCSmd6st/8S79TLr6TZXh+vn75J72y5zRC7JJXE2JN/Ra+s06yZb4lG8hN7ZHSqBSmJKa/s9YS/DK/7DHkFcJ/qFJxlhJCMd1QgKxILonsx1NlS0OhIxIYfm2YI0qikuRHYhGUvpIpr78ls4705yEJTQnmR1MlmiOoZE4nMvAK6sNbc/BM65PUT2Y9ofqUo6nDkO8nqBwdX1gyewoVLokTKIgcrPAgjvE98pAYa5AIfmkSM5IN7nEfO0jO0KCVvlR+M5QNvkiBlbRSfXzJJLI71sxJ/9lTIseqg1z5rOGi+bn6SxKmZGXs98gf9hIQ1OaNpwTGGiwl8VsJMc4F+rnhqU3SeAZTz2kOu0fc6fLCMddGUnbVImRTjGpNXprmR26wqXCqJoUn8wkcGQP1YgyUjKQE4uQg+cR1nDMpy+rHxP0464U6w2s5k+wU6UwJPkJ5l1BOekkGUSczfF35a4iJ+NP4JwXb8xdFE2CzHEKFUL78sXkhjBYYCH4LXKHWKDITLxCua7BrH8VoXTvCqyEQdEYQtPxBTnvGyIjUqmvlRL3PO8CJgEVEFgzLocgYbLxQkck6qUgSqcxV8yWCUG80UVAixv4h0GQNOiMQkEidYRAQ//RVoy1lHanF3KORmlqLheyzqsz5rzXHWaZh5ys8KCyJ9Q4h5SftauTmJdUxgvrtVijyy9xPjDJk761uFmmYeJWVIhDzyCRZ5BL0CpepnC8CQcQOcQdz5HcI7hK2IycIFAejSkuqOQdvdRm5+3Np7+NvCLQntglkFbAM/131nArS3PerLqWVCaWWBfcK8hAxSduc0jWwcgjM0rgIPLT4KITLe+4TAlsu0pz0aCWJnKbh0RTxlo2JJTEJF1SXJU+jOUIkVa82vkt1LqKwQx1BPqZnK03qmWhHNrAgFf7ULCdOU62UKlLV2fg4qjSxO7MrW9TlGcg95Il+9kwJ9ShBUknrDCBVslH2Q6hTpYZr2qooWTm70Uw7Ur/cM+WJ/TIsLBCnxA8qWl+iZy44tiKkQHrMmaAod4sXrQgS7iauy3mFSZ6iqWsIotunWfun/kqStAjKqWqlSVxAfjQ3jUAzhiz/rVJkpreSKGKZfvumrVEsCVVGJRwlRqcdFAhFgInWLapze2FX5EYoU9HeTK4s3V5NIiGbk1Lu1IJM0UCDEJNOJMU1Lzaopr2yemRBXEcvkheateNlGje3Lf+6wfaXivdAvu92mcASw03Dd1tP0y+wL0u6MTJASfrWS1BNnbeQTC1MkrgLTHsbRIOqCWAQFcQtZCHqM88KeEW7gDUB+co6ILMzCjjWPfRIOSH75MYHyAo4H00x58SNHFvtalH15Czbymp/AWgmBAHbSYQUKUjpI0KiOIg7MzIINJwuixt4YLjyhXixhkm/WSL1I6HHPU6C200Bitnr'
				$Code &= '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'
				$Code &= '6Ci6/BEUxDjDFihJnlFFnyHSHB6cjSAWQgwphjTyJB5oKEFZVS+MVEbM9yA+1bCpmK40xlNp4LuZseaBKdhMOcBgJsLHGU2FkkG9Ri8UDumdHBSF9vgllJDq70mwWGYcgOpedt9YOU0MD0f+ovj6AZ7PAv3o2y6FR/7HHOo8gslBi4TmvXAFYQQKPf8DlP+JEoV3NwgcDKZEstuJkA11IKEXEBp9hEwJWWQUFF9ogQLhMdvod9GI1pROaWwkQkn+dAEL5yiUkFnD/jAZCBwe6FVHlAsi1qnJyMh9kJCqIcj1rVNp59i4cVzxQGrZZr8UWrNjdIRC4bFXLQvEUTU6+wuD6IBWYVVCxTcZjAirQi/r6uyMh9fLVFzrVDrrVGRXLVCTtUVh61jWri8h8AITjLx/WqI3xTHSqyphz4QIeHYgBBHoFoFE43nefYS1ZmbIEMBjBBN0M4TzDInFVYPCHZ0C+kB1xNWVeU7RI8BEkC8ho/FaastyT7bPWqZ58sA/CN4DhoH/rk0WD4eJrXziu4sXVH+Og68SZIK8BnxTsAwiKES46FpXsojIyPWLRANWbFUtUUDeRsC5zj0WkqjSWqJA4oIdZGo+iD1x+g/ywBFZDF6GRmb3JP5nPxCo9YdBkOvaatwmv/acjT8tlFtOZYuqcv4IEAH9h+geluOtMvIHEc0akR4tr1kyxMBrIcDT5GrOqRCiwD5CBneF1iMO0uTAazgVRkciy1ZWMhnPBtaApMH886RfXlLDECHQl6oLh+hW547GYyOl+HyIhO534pk49nuOjf/yIw3Wa4i93m/isTiRxY5UYDAjUAIBiAPOZ+KpOFYrjn3n/iMZtdeIYk2r4uY47HaOmo/KI0UfgoqdY1GIQPp94od17+wVOLJZjuuORyPJ+/CIC0Gt4uw4s9SOZ1+iI/1Fr4jqI5zivzhTpI735HIjlpvAiFt1t+LCOOH9jhw9kyOuTCaIamw24lo4fj+OQfX3Mw5/zCNPaDSIXFGl4vQ40eX6OPnxjgjicSOTq9iIc2Ix4lM4KhWOPwgEIwyVx4hSRiPiZTidw45eMBgjKDeWiKEKBeIPOC+ajrUOByMJJBKINhuA4ps43+KOPc3rIyZOJ4hpf7Lj7Op14p84EgmOGx2DI55YLIh0NBriLt9Sxy3cbhGytFrE7ltxoBz7pFJH9nY7EU231sRhfXGzf85xKRx73eNHPl4vEXEThMSXpnFTHPW50VNoIfPB7cQsQHEgTGDHcRwfebFHyLZbEe3UasS+jXHLO0ZndxzZcjlHS5RKEd6YTMTUsHFYHOiFz38cu9BHa8XvESpPqsTl7XH7HBaGQ3+cmk1H12YzEVURhcSUinFFHM/p+UcQBAIRBv5/xIGgcVAc8Hg8R0QlnxG6S6jE46JxURzzXaNH/oBAEcAFj8SKP3GSHK0hnUe8cDgRSPH1xARj9ezfd3G2HMGv2kd1QiEf5yAQEjDlYFMa/XHzHA6/0kdtgc0RTBgMxBQmcRMcNcPsRy++Xxfhl5cRoohExMwucRccOZPER1dVpxHy/H7EgnpxPRxHyGRHrLpdEecyGcQr5nFzHJXAYF6g3IFHmJ5PEdGj3MR/RHEiHGZUKkd+O5ARqwuIxIOMcUYcysfuRylruBHTKBTEPKdx3hx5vF5H4hYLER2t28V2zeDEO2RxMhxWdDpHThQKER6SScTbDHEG9EhxJBxsuFxH5J/CEV2908RuQ3GsHO/EYkemOZERqDGVxKTTceQcN/J5RYvV5x2LXMhPQ27fx1nabRG3AY3EjLFx1RxknE5H0kmpEeDYbMS0rHFWHPrz9EcHz+oRJcplxa/tesZhn67E6RBxCBwYb7pS1RxRR4hKJR9nXC4RcjgcxCRXcaYc8XO0R8eXxhFRy+jEI6Fx3Xd8cXQcnD4fRyGWSx/HYb0R3A2LxIYPcYocheBwR5B8PhFCcbXExMxxZn2qcUgc2AYDRwX39hEBHA7EEsJxYRyjajVHX65XEflpucTQF3GGHJGZwUdYOh0Zh4aeEbnZ4cQ463H4HBMrmEez'
				$Code &= 'IhERM9JpxLupcdkccAeOX4lclEenLZsRtjwexCIVcYccksnpXSDczkdJqlUR/1AoxHilcd8cegOMR49ZoRH4CYnEgBpxDRwXZb9H2tfmETGEQsTG0HFoHLiCQUfDKZkRsFotxHcecQ89EXt7HMuoVEf8bbsR1iwWxDpBXVgIi6WkCYRImZGNIg1EvbGJVBJQJANIqZF9IhlEYuaJmhJFJJ1IQJGHIhVF6/okC0jskWci/UTqv4n3EpYkW0jCkRwirkRqWolBEgIkT0hckfR2iQgSkyRzSFORPyIMRFJliV4SKCShSA+RtSIJRDabiT0SJiRpXeJEnxuJnhJ0JC5ILZGyIu5E+/aJTRJhJM5Ie5E+InFEl/WJaBcIkSwiYEQfyIv0SL6RRiLZREveidQS6C9RImtEKuWJFhe4kdciVUSUz4kQEgYkgUjwkUQiukTj84n+EsAkikitkbwiSEQE34nBEnUvcSIwRBoOiW0STCQUSDWRLyLhRKLMiTkSVyTySIKRRyKsROcriZUSoCSYSNGRfyJmRH6riYMSyiQpSNORPCJ5ROIdiXYSOyRWSE6RHn+LtEhskeQiXURu74mmEqgkpEg3kYsiMkRDWYm3EowkZEjSkeAitET6B4klEq8kjkjpkRgi1UWI3iRySCSR8SLHRFEjiXwSnCQhXqJE3IaJhRKQJEJIxJGqIthEBQGJEhKjJF9I+ZHQIpFEWCeL9Eg4kRMis0Qzu4lwEokkp0i2kSIikkQgSYn/EngkekiPkfgigEQX2okxEsYkuEjDkbAid0QRy4n8EtYkOlZyB2PpCHwSdyR7SPKRayJvRMUwiQESZyQrSP6R1yKrRHbKiYISySR9XKJEWUeJ8BKtJNRIopGvIpxEpHKJwBK3JP1Ik5EmIjZEP/eJzBI0JKVI5ZHxInFE2DGJFRIEJMdII5HDIhhElgWJmhIHJBJIgJHiIutEJ7KJdRIJJINILJEaf4luElokoEhSkTsi1kSzKYnjEi8khEhTkdFwie0SICT8SLGRWyJqRcveJDlISpFMIlhEz9CJ7xKqJPtIQ5FNIjNEhUWJ+RICJH9IUJE8Ip9EqFGJoxJAJI9IkpGdIjhF9e4ktkjakSEiEET/84nSEs0kDEgTkewiX0SXRIkXEsQkp0h+kT0iZERdGYlzEmAkgUhPkdwiIkQqkImIEkYk7ki4kRQi3kReC4nbEuAkMkg6kQoiSUQGJIlcEsIk00iskWIikUSV5Il5EuckyF/iRG2NidUSTiSpSGyRViL0ROpliXoSriQISLqReCIlRC4ciaYStCTGSOiR3SJ0RB9Lib0SiySKSHCRPiK1RGZIiQMS9iQOSGGRNSJXRLmGicESHSSeSOGR+CKYRBFpidkSjiSUSJuRHiKHROnOiVUSKCTfSIyRoSKJRA2/ieYSQiRoSEGRmSItRQ/uJFRIu5EWLlkH6yQIfEh3kXsi8kRrb4nFEjAkAUhnkSsi/kTXq4l2EsokgkjJkX1xiVkSRyTwSK2R1CKiRK+ciaQSciTASLeR/SKTRCY2iT8S9yTMSDSRpSLlRPFxidgSMSQVSASRxyIjRMMYiZYSBSSaSAeREiKAROLriScSsiR1SAmRgyIsRRr6JG5IWpGgIlJEO9aJsxIpJONIL5GEIlNF0WMHWQgiIET8sYlbEmoky12iRDlKiUwSWCTPSNCR7yKqRPtDiU0SMySFSEWR+SICRH9QiTwSnySoSFGRoyJARI+SiZ0SOCT1XqJEttqJIRIQJP9I85HSIs1EDBOJ7BJfJJdIRJEXIsREp36JPRJkJF1IGZFzImBEgU+J3BIiJCpIkJGIIkZE7riJFBLeJF5IC5HbIuBEMjqJChJJJAZIJJFcIsJE06yJYhKRJJVI5JF5IudFyPokbUiNkdUiTkSpbIlWEvQk6khlkXoirkQIuol4EiUkLkgckaYitETG6IndEnQkH0hLkb0ii0SKcIk+ErUkZkhIkQMi9kQOYYk1ElckuUiGkcEiHUSe4Yn4EpgkEUhpkdkijkSUm4keEock6UjOkVUi'
				$Code &= 'KETfjImhEokkDUi/keYiQkRoQYmZEi0kD16iRFS7iRYRWsOAAA=='
		Else
			Local $Code = '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= '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'
				$Code &= 'kYkiDUS/5olCEmgkQUiZkS0iD/cSVCS7SBasBxdTYRHfWx1kEnyJdxJ7JPJIa5FvIsVEMAGJZxIrJP5I15GrInZEyoKJyRJ9LjEiWURH8ImtEtQkokivkZwipERywIm3Ev0kk0gmkTYiP0T3zIk0EqUk5UjxkXEi2EQxFYkEEsckI0jDkRgilkQFmokHEhIkgEjikesiJ0SydYkJEoMkLEgav0RuiVoSoCRSSDuR1iKzRCnjiS8ShCRTSNGsEWskEiBI/JGxIltEasuLtEg5kUoiTERYz4nQEu8kqkj7kUMiTUQzhYlFEvkkAkh/kVAiPESfqIlREqMkQEiPkZIinUQ49YvUSLaR2iIhRBD/ifMS0iTNSAyREyLsRF+XiUQSFyTESKeRfiI9RGRdiRkScyRgSIGRTyLcRCIqiZASiCRGSO6RuCIURN5eiQsS2yTgSDKROiIKREkGiSQSXCTCSNORrCJiRJGVieQSeSTnSMi/RG2JjRLVJE5IqZFsIlZE9OqJZRJ6JK5ICJG6InhEJS6JHBKmJLRIxpHoIt1EdB+JSxK9JItIipFwIj5EtWaJSBIDJPZIDpFhIjVEV7mJhhLBJB1InpHhIvhEmBGJaRLZJI5IlJGbIh5Eh+mJzhJVJChI35GMIqFEiQ2JvxLmJEJIaJFBIplELQ+L1EhUkbsiFrAHwAA='
		EndIf
		Local $Opcode = String(_ECHO_CodeDecompress($Code))
		$_ECHO224_InitOffset = (StringInStr($Opcode, "89DB") - 3) / 2
		$_ECHO224_InputOffset = (StringInStr($Opcode, "87DB") - 3) / 2
		$_ECHO224_ResultOffset = (StringInStr($Opcode, "09DB") - 3) / 2
		$_ECHO256_InitOffset = (StringInStr($Opcode, "89C9") - 3) / 2
		$_ECHO256_InputOffset = (StringInStr($Opcode, "87C9") - 3) / 2
		$_ECHO256_ResultOffset = (StringInStr($Opcode, "09C9") - 3) / 2
		$_ECHO384_InitOffset = (StringInStr($Opcode, "89D2") - 3) / 2
		$_ECHO384_InputOffset = (StringInStr($Opcode, "87D2") - 3) / 2
		$_ECHO384_ResultOffset = (StringInStr($Opcode, "09D2") - 3) / 2
		$_ECHO512_InitOffset = (StringInStr($Opcode, "89F6") - 3) / 2
		$_ECHO512_InputOffset = (StringInStr($Opcode, "87F6") - 3) / 2
		$_ECHO512_ResultOffset = (StringInStr($Opcode, "09F6") - 3) / 2
		$Opcode = Binary($Opcode)

		$_ECHO_CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
		$_ECHO_CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $_ECHO_CodeBufferMemory)
		DllStructSetData($_ECHO_CodeBuffer, 1, $Opcode)
		OnAutoItExitRegister("_ECHO_Exit")
	EndIf
EndFunc

Func _ECHO224Init()
	If Not IsDllStruct($_ECHO_CodeBuffer) Then _ECHO_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_ECHO224[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_ECHO_CodeBuffer) + $_ECHO224_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc

Func _ECHO256Init()
	If Not IsDllStruct($_ECHO_CodeBuffer) Then _ECHO_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_ECHO256[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_ECHO_CodeBuffer) + $_ECHO256_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc

Func _ECHO384Init()
	If Not IsDllStruct($_ECHO_CodeBuffer) Then _ECHO_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_ECHO384[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_ECHO_CodeBuffer) + $_ECHO384_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc

Func _ECHO512Init()
	If Not IsDllStruct($_ECHO_CodeBuffer) Then _ECHO_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_ECHO512[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_ECHO_CodeBuffer) + $_ECHO512_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc


Func _ECHO224Input(ByRef $Context, $Data)
	If Not IsDllStruct($_ECHO_CodeBuffer) Then _ECHO_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_ECHO_CodeBuffer) + $_ECHO224_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _ECHO256Input(ByRef $Context, $Data)
	If Not IsDllStruct($_ECHO_CodeBuffer) Then _ECHO_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_ECHO_CodeBuffer) + $_ECHO256_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _ECHO384Input(ByRef $Context, $Data)
	If Not IsDllStruct($_ECHO_CodeBuffer) Then _ECHO_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_ECHO_CodeBuffer) + $_ECHO384_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _ECHO512Input(ByRef $Context, $Data)
	If Not IsDllStruct($_ECHO_CodeBuffer) Then _ECHO_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_ECHO_CodeBuffer) + $_ECHO512_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc


Func _ECHO224Result(ByRef $Context)
	If Not IsDllStruct($_ECHO_CodeBuffer) Then _ECHO_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_ECHO224[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_ECHO_CodeBuffer) + $_ECHO224_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _ECHO256Result(ByRef $Context)
	If Not IsDllStruct($_ECHO_CodeBuffer) Then _ECHO_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_ECHO256[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_ECHO_CodeBuffer) + $_ECHO256_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _ECHO384Result(ByRef $Context)
	If Not IsDllStruct($_ECHO_CodeBuffer) Then _ECHO_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_ECHO384[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_ECHO_CodeBuffer) + $_ECHO384_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _ECHO512Result(ByRef $Context)
	If Not IsDllStruct($_ECHO_CodeBuffer) Then _ECHO_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_ECHO512[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_ECHO_CodeBuffer) + $_ECHO512_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _ECHO224($Data)
	Local $Context = _ECHO224Init()
	_ECHO224Input($Context, $Data)
	Return _ECHO224Result($Context)
EndFunc

Func _ECHO256($Data)
	Local $Context = _ECHO256Init()
	_ECHO256Input($Context, $Data)
	Return _ECHO256Result($Context)
EndFunc

Func _ECHO384($Data)
	Local $Context = _ECHO384Init()
	_ECHO384Input($Context, $Data)
	Return _ECHO384Result($Context)
EndFunc

Func _ECHO512($Data)
	Local $Context = _ECHO512Init()
	_ECHO512Input($Context, $Data)
	Return _ECHO512Result($Context)
EndFunc

Func _ECHO_CodeDecompress($Code)
	If @AutoItX64 Then
		Local $Opcode = '0x
	Else
		Local $Opcode = '0x
	EndIf
	Local $AP_Decompress = (StringInStr($Opcode, "89C0") - 3) / 2
	Local $B64D_Init = (StringInStr($Opcode, "89D2") - 3) / 2
	Local $B64D_DecodeData = (StringInStr($Opcode, "89F6") - 3) / 2
	$Opcode = Binary($Opcode)

	Local $CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
	Local $CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $CodeBufferMemory)
	DllStructSetData($CodeBuffer, 1, $Opcode)

	Local $B64D_State = DllStructCreate("byte[16]")
	Local $Length = StringLen($Code)
	Local $Output = DllStructCreate("byte[" & $Length & "]")

	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($CodeBuffer) + $B64D_Init, _
													"ptr", DllStructGetPtr($B64D_State), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	DllCall("user32.dll", "int", "CallWindowProc", "ptr", DllStructGetPtr($CodeBuffer) + $B64D_DecodeData, _
													"str", $Code, _
													"uint", $Length, _
													"ptr", DllStructGetPtr($Output), _
													"ptr", DllStructGetPtr($B64D_State))

	Local $ResultLen = DllStructGetData(DllStructCreate("uint", DllStructGetPtr($Output)), 1)
	Local $Result = DllStructCreate("byte[" & ($ResultLen + 16) & "]")

	Local $Ret = DllCall("user32.dll", "uint", "CallWindowProc", "ptr", DllStructGetPtr($CodeBuffer) + $AP_Decompress, _
													"ptr", DllStructGetPtr($Output) + 4, _
													"ptr", DllStructGetPtr($Result), _
													"int", 0, _
													"int", 0)


	_MemVirtualFree($CodeBufferMemory, 0, $MEM_RELEASE)
	Return BinaryMid(DllStructGetData($Result, 1), 1, $Ret[0])
EndFunc
