; -----------------------------------------------------------------------------
; MD4 Hash Machine Code UDF
; Purpose: Provide The Machine Code Version of MD4 Hash Algorithm In AutoIt
; Author: Ward
; -----------------------------------------------------------------------------

#Include-once
#Include <Memory.au3>

Global $_MD4_CodeBuffer, $_MD4_CodeBufferMemory
Global $_MD4_InitOffset, $_MD4_InputOffset, $_MD4_ResultOffset

Global $_HASH_MD4[4] = [16, 88, '_MD4_', '_MD4_']

Func _MD4_Exit()
	$_MD4_CodeBuffer = 0
	_MemVirtualFree($_MD4_CodeBufferMemory, 0, $MEM_RELEASE)
EndFunc

Func _MD4_Startup()
	If Not IsDllStruct($_MD4_CodeBuffer) Then
		If @AutoItX64 Then
			Local $Code = 'kwgAAIkO2+nGBhwZhw4ZEgkE+UdBVydWR1VnVD8dwFNIg+woRBiLSgwIQgiAcgSBKfka8XGPGInIx3kM02kQyTHAjChRFAhZBxhBjVwdD6Yh8BgwYSAuyIl8BiQYjQQDMt5q3lTHFMHAvu5c4RxBAdmYHsM+8yHeCxlGQga3JSJXwRYHK818yw2ZJP66JJsM2FT+MjbAC1Aw55ifDBIB6M8u3tQwEMYTIMth8w1FAdFShCyPMPvPaLG6dBoIFRxeylDYYc80lygcW4mTEFJSy61lC/XgSmLZJvlPXnpsxw8G99m9kihRXyHPUxDYM8rWDPh/WKa6QcfNRfHCuhD7U8rXKDBY+iFt8iFNzdBTuTQ0rUGlSrIEy7ZeO3nCzZshDeax3TjMSTyjZ/QbNQYo0IkMJAx/+M/PjUoOazxoyWwUxgkACc5CjYQomRl5glrG+Zkox3QTCI0ojCkUzLLORP7Q5rIbAfAM5v/NHsZ7uzAyR24gEiwgkAF28dujdD33BWyqgDmEQ0Vs+UDw3wwbQXU7iAnCc6oZDcxyArV0Q+5l63QNSIwwSJ2imod+ICVoFPWDsfSMMQkUkVGOi0KD0CUrDIWUR0vQl5qWNImBJgRci0KmTISd0Zh+kJ30UYqbkZBk8xmLFtGWVxllgBgnILkfFjLdEUcX2RgiFLRUjReoEIXRCArxNCRKigCNrCih69lukx7IiaIWjKWsHKQZQjEoIRpsQRawzauXJCjFZmkTsGYWKMTAZOkSzNQWWSdsCQfsfsjMVuUuwKqTAhfBxWib6Ilv7ypc/EyDihkWvrQPGhKAHcKV7pchKzKti8TkEMaJwyzxdClXI1g17pRC0YgB3WWqpqV9Pizre6xQtZNQoCg6iWVDRXSNG/wY8+8htyomvCBBaRDFihwiphM7yLWfK14y7whEKMyAzr8BbfW8xwxhGIfojJrYWA9StWaabg9cEeQF90oMKFgDbwK1JWoID12Jm7cAPARIg8QoW14OX11BXFsIx28pw0aAH0mJ1ZlUCszn8kxC7+aJHU2FwMGLcVB0X/DmPwNMjXlAQb6fDALrFA1JAagBUEiF/3RG6kQhOfUpUav8Ofs9dgS+/fb+8cyK2Ibq7XEoxAHuA0gp3+h6AgNqg/5AdcgzLPoG4cgw9uh5CXH/rEYpdbqSclAMDEiJ11YIzm9TZPWMHSBJAvh/dn6Dj0FQ6OA/dUBHZhlAMe1A+Zk+4sjpvkR/Pui076qDjQQrBhr4P3fkRDRDwDobwV67QWJnMlQHh4Mm8QFeUJHfIIXDvSHRKcVDsugzMu+Q67nw/ruIM6Kw8dHEAaM0LmgLUOnI0VGXOhhM6jdQhw7gBCQBI0VYZ3J38okzq82Wi2AgGQj+3LpgmBEMdlQyYxCqQUBtMCsT8ymXGNg0EqASKNIKDOYwCtbSBgwaOAps+kCBy13s+cLUwAGg0jjGAwQRgA+GtwXZicFBuCS4DdNrUERmgO8pwDFq0mJpFCKzlHpnBtmyqPiAoPbDAbphOFEPhdmfDUDMxwIU3YxABLOIidGwNwXB6QP2wgG1yfNIq7sqxYAcAnV0g+IB6mqggkNQ0JtTDcHgAw74OOhsULEsQIvzBlAQ/EZvBAywIAhATAzQYs2fIT1Syn+Eg+rp6dElLwi3OIoIrLXowEPobgYl65bGBwodkWbHqsBRg6eg+4Fx66IPJREEQ5MPhGlQhpvbpBUUg+oEGBjpOynGA5IKD3sBsjfNGR0WRT5FAtDpEolWNErPklyAoMH8BfOkX17DIhDQGaoxbIAA'
		Else
			Local $Code = 'TggAAIkA24PsBItEJAjz26DoVQbhw/vE+cIQwYeRLxwbKIk3eRGKBCcgIX4FCByJCR0PHxBHBqBVV1ZhU0JAizjIcgzqKu5awJRKBIl8JB08Af2B9zHfIc/Ts43zPYCLaAQAwccDiWwkOAF27gfdMc0h/U7bFAQsCMHGB080juvI/Zv1CGAULAzBwwuJMPHp2xsk/SFgphTHLBDBFBNPLIzvhfU2Ic0IFMosFFhEKFkk3VhYGIzjHiMcESDn+MQceCSMRxiIKMQUeCyMRxCIMMQMeDSMRwiUPhRAPFuIBHnB6/UjwvB+vxv4IdiPbwyK0kyFPLmNALwHmXmCWonYDgnwIciE6IuQG40EBxnBwAMyLgzOMgneyCEHxobuOwwcjTQ3xgXIOithwwnL0cVHlSfzhus7DQyNHB/M7yE6KZ7xtPYZsj7Z4emDOziNDA8g4A1CKJCKQYgMdCiPRBh6IQjR2aLsdEc0pxj0RxSiBL3oETDoII9EEG4VLCRzuDyFgqHr2W4MJyw5MfAJyAHHJOUc0CuNtAaoGsgxSNj9QYP3ISArMFEMifugkAkxcstmw8IeLlQpJ8HJMxSRL/nL9rZ+Dkh0SWS+Dwg3Yd4xxsnOVKs2b1njoLK4ZAO58A4HaLxSYcLzXFwf5ryGzS84wAJc8RMpqy4XmxiyR8tc3iHxCA+IMHxDEOIgHShrhVtoV2IDMqxZmYn0Abil5wdnQvuAwkBbXl8DXcNVidVXms/jyL+rgMpMhcmLcVAOdHmNQD9L4j+n9DxEXIGK6yIikH6QT3gwZkwIxxhwNN8DNTSAukhQEQBYVIX/dEe+QMAnKdY5/nY6AolRL/H3Y9A/9SRU1TZ36krQRjs9AnPfJYDyg/pAdajKFzwtD+izzv8hMdLrl0KVTDLkWUkswzNIQUB22f7+VH+RHBwPhoAqRPXQQlAFg+A/dUSI3zF7/ybFQEI5D+op+C/vJuhkn6EcN+/oP3fq8EYUwInCznXeWcxUE+ouixRhAXK7PXpk4Cwyv5C/idpMKXreB/kB+6H+6OPPEorrotkgsipsBJDCewGA67zScRrNYAM86btAUawQ00sDflBAx5cwASNFZ94O96UPzEJqqzDN7w4I/twgupgGDHZUMhA46wm9iElzJCxiSOCSMEklIJKzUED7KdR8UkPfB8YEA4BywAGFyjgI+aiUuqnA3ynCjWv1QuIDpJYIl5GYSJ5EIVQFUQnkYvmglfbD/LphODMPhbmFDffHAkgMnYCJ0THAwekcAvbCwvOrdXxBHQHVcrnfgFNUD6TCA8Fv4K6pOC9N7DyW6G0ZkzhDXAY/CkSZRgQMSAIIBEwKDK6VIL5IFkWy8pLGKrYZienvKBF5oKaOo4qtNKZgexHrjsYH3wqNZscMRAoRm4QND4R4cEJy6JET6gYsNOlTJYfrBI2BdrI39TqNG1ZX3QJ6EGmMFDGv5C/8BYP5CHInCN4BvwoCpEnoz0EFZqWDQeKJylPn89Uf8A7hA+ak6xboXxlew1d3EBAwD7aglQxpkF7ZA60IkHQDggqqSZAKdfapP/whJAhAqjBfwwA='
		EndIf
		Local $Opcode = String(_MD4_CodeDecompress($Code))
		$_MD4_InitOffset = (StringInStr($Opcode, "89DB") - 3) / 2
		$_MD4_InputOffset = (StringInStr($Opcode, "87DB") - 3) / 2
		$_MD4_ResultOffset = (StringInStr($Opcode, "09DB") - 3) / 2
		$Opcode = Binary($Opcode)

		$_MD4_CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
		$_MD4_CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $_MD4_CodeBufferMemory)
		DllStructSetData($_MD4_CodeBuffer, 1, $Opcode)
		OnAutoItExitRegister("_MD4_Exit")
	EndIf
EndFunc

Func _MD4Init()
	If Not IsDllStruct($_MD4_CodeBuffer) Then _MD4_Startup()

	Local $Context = DllStructCreate("byte[" & $_HASH_MD4[1] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_MD4_CodeBuffer) + $_MD4_InitOffset, _
													"ptr", DllStructGetPtr($Context), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	Return $Context
EndFunc

Func _MD4Input(ByRef $Context, $Data)
	If Not IsDllStruct($_MD4_CodeBuffer) Then _MD4_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, 0)

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_MD4_CodeBuffer) + $_MD4_InputOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Input), _
													"uint", $InputLen, _
													"int", 0)
EndFunc

Func _MD4Result(ByRef $Context)
	If Not IsDllStruct($_MD4_CodeBuffer) Then _MD4_Startup()
	If Not IsDllStruct($Context) Then Return SetError(1, 0, "")

	Local $Digest = DllStructCreate("byte[" & $_HASH_MD4[0] & "]")
	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($_MD4_CodeBuffer) + $_MD4_ResultOffset, _
													"ptr", DllStructGetPtr($Context), _
													"ptr", DllStructGetPtr($Digest), _
													"int", 0, _
													"int", 0)
	Return DllStructGetData($Digest, 1)
EndFunc

Func _MD4($Data)
	Local $Context = _MD4Init()
	_MD4Input($Context, $Data)
	Return _MD4Result($Context)
EndFunc

Func _MD4_CodeDecompress($Code)
	If @AutoItX64 Then
		Local $Opcode = '0x
	Else
		Local $Opcode = '0x
	EndIf
	Local $AP_Decompress = (StringInStr($Opcode, "89C0") - 3) / 2
	Local $B64D_Init = (StringInStr($Opcode, "89D2") - 3) / 2
	Local $B64D_DecodeData = (StringInStr($Opcode, "89F6") - 3) / 2
	$Opcode = Binary($Opcode)

	Local $CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
	Local $CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $CodeBufferMemory)
	DllStructSetData($CodeBuffer, 1, $Opcode)

	Local $B64D_State = DllStructCreate("byte[16]")
	Local $Length = StringLen($Code)
	Local $Output = DllStructCreate("byte[" & $Length & "]")

	DllCall("user32.dll", "none", "CallWindowProc", "ptr", DllStructGetPtr($CodeBuffer) + $B64D_Init, _
													"ptr", DllStructGetPtr($B64D_State), _
													"int", 0, _
													"int", 0, _
													"int", 0)

	DllCall("user32.dll", "int", "CallWindowProc", "ptr", DllStructGetPtr($CodeBuffer) + $B64D_DecodeData, _
													"str", $Code, _
													"uint", $Length, _
													"ptr", DllStructGetPtr($Output), _
													"ptr", DllStructGetPtr($B64D_State))

	Local $ResultLen = DllStructGetData(DllStructCreate("uint", DllStructGetPtr($Output)), 1)
	Local $Result = DllStructCreate("byte[" & ($ResultLen + 16) & "]")

	Local $Ret = DllCall("user32.dll", "uint", "CallWindowProc", "ptr", DllStructGetPtr($CodeBuffer) + $AP_Decompress, _
													"ptr", DllStructGetPtr($Output) + 4, _
													"ptr", DllStructGetPtr($Result), _
													"int", 0, _
													"int", 0)


	_MemVirtualFree($CodeBufferMemory, 0, $MEM_RELEASE)
	Return BinaryMid(DllStructGetData($Result, 1), 1, $Ret[0])
EndFunc
