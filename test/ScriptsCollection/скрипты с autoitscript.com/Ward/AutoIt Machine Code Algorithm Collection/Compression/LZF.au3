; -----------------------------------------------------------------------------
; LZF Compression Machine Code UDF
; Purpose: Provide The Machine Code Version of LZF Algorithm In AutoIt
; Author: Ward
; LZF Copyright (C) 2000-2007 Marc Alexander Lehmann <schmorp@schmorp.de>
; -----------------------------------------------------------------------------

#Include-once
#Include <Memory.au3>

Global $_LZF_CodeBuffer, $_LZF_CodeBufferMemory, $_LZF_Compress, $_LZF_Decompress

Func _LZF_Exit()
	$_LZF_CodeBuffer = 0
	_MemVirtualFree($_LZF_CodeBufferMemory, 0, $MEM_RELEASE)
EndFunc

Func _LZF_Startup()
	If Not IsDllStruct($_LZF_CodeBuffer) Then
		If @AutoItX64 Then
			Local $Opcode = '0x
				$Opcode
		Else
			Local $Opcode = '0x89C083EC2C8B54243C8B442430895424108B5424388954240C8B5004895424088B542434895424048B00890424E83600000083C42CC2100089DB83EC1C8B4424208B5424288954240C8B5004895424088B542424895424048B00890424E86A04000083C41CC210005557565383EC208B4424408B4C243C8B54243801C185C0894C24100F841B02000085D20F84130200008B5C243431F6035424348B44243C8954241C0FB6138B7C241C0FB64B0183C001C1E20883EF0209D189DA897C240CEB213B4424100F83D90100000FB61A83C60183C201881883C00183FE200F84220200003B54240C0F835A0100008D6A0289CB896C24180FB64A02C1E30809D989CBC1EB088D3C8929FB8B7C244481E3FFFF00008D1C9F8B3B89138D5AFF29FB81FBFF1F0000895C24087797397C24348D6A04896C2414738A8B5C241C39DD73820FB71F663B1A0F8576FFFFFF8B6C24180FB65F023A5D000F8565FFFFFF8D4804394C24100F862A0100008B4C241C29D183E90281F9080100000F873001000089F385F6F7D3895C24188B6C24188D5EFF881C280F94C389DE81E6FF00000029F083F9100F86940100000FB66F03BE02000000C64424182089EB3A5A030F84F700000083C2018B4C2408C1E908024C2418880883C0010FB64C240801F2880883C0023B54240C0F830A0200000FB65AFE8D72FF0FB64AFF8D7AFEC1E30809D90FB61AC1E10809D989CB8D2C89C1EB0829EB8B6C244481E3FFFF0000C1E108897C9D000FB65E0209D989CBC1EB088D3C8929FB81E3FFFF000089749D0031F63B54240C0F82A6FEFFFF8D4803394C241072553B54241C731F8B5C241C0FB60A83C60183C201880883C00183FE200F84A300000039D377E589F2F7D28D4EFF880C1031D285F60F94C229D02B44243C83C4205B5E5F5DC385F6750D8D4803394C24100F87C5FEFFFF83C42031C05B5E5F5DC3B908010000E9C6FEFFFF8B6C241466BE0300C6442418400FB65F043A5D000F85EFFEFFFF0FB66F0566BE0400C64424186089EB3A5A050F85D7FEFFFF0FB6770689F33A5A06742DBE05000000C644241880E9BDFEFFFFC640DF1F6631F683C001E9CFFDFFFFC640DF1F6631F683C001E94EFFFFFF0FB6770789F33A5A077470BE06000000C6442418A0E985FEFFFFBE020000008B5C240801F78D2C32894C240483C6013974240476180FB64F0183C701884C24180FB64D0183C501384C241874DF8D4EFE83C20183F906895C2408765083E90783EE018B7C2408884801C1EF0883EF2089FB881883C002E937FEFFFF0FB6770889F33A5A08740FBE07000000C6442418C0E90AFEFFFF0FB6770989F33A5A09741BBE0800000031C983C201EBB6C1E10583EE01884C2418E9E7FDFFFF0FB6770A89F33A5A0A7413BE09000000B901000000EBD531F6E94BFEFFFF0FB6770B'
				$Opcode
 		EndIf
		$_LZF_Compress = (StringInStr($Opcode, "89C0") - 3) / 2
		$_LZF_Decompress = (StringInStr($Opcode, "89DB") - 3) / 2
		$Opcode = Binary($Opcode)

		$_LZF_CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
		$_LZF_CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $_LZF_CodeBufferMemory)
		DllStructSetData($_LZF_CodeBuffer, 1, $Opcode)
		OnAutoItExitRegister("_LZF_Exit")
	EndIf
EndFunc

Func _LZF_Compress_Core($Data)
	If Not IsDllStruct($_LZF_CodeBuffer) Then _LZF_Startup()

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)

	Local $OutputLen = Ceiling($InputLen + 1.04) + 16
	Local $Output = DllStructCreate("byte[" & $OutputLen & "]")

	Local $Var = DllStructCreate("ptr src; ptr dst")
	DllStructSetData($Var, "src", DllStructGetPtr($Input))
	DllStructSetData($Var, "dst", DllStructGetPtr($Output))

	Local $Buffer = DllStructCreate("byte[524288]")

	Local $Ret = DllCall("user32.dll", "uint", "CallWindowProc", "ptr", DllStructGetPtr($_LZF_CodeBuffer) + $_LZF_Compress, _
													"ptr", DllStructGetPtr($Var), _
													"uint", $InputLen, _
													"uint", $OutputLen, _
													"ptr", DllStructGetPtr($Buffer))

	Return BinaryMid(DllStructGetData($Output, 1), 1, $Ret[0])
EndFunc

Func _LZF_Decompress_Core($Data, $MaxBuffer)
	If Not IsDllStruct($_LZF_CodeBuffer) Then _LZF_Startup()

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)

	Local $Output = DllStructCreate("byte[" & $MaxBuffer & "]")

	Local $Var = DllStructCreate("ptr src; ptr dst")
	DllStructSetData($Var, "src", DllStructGetPtr($Input))
	DllStructSetData($Var, "dst", DllStructGetPtr($Output))

	Local $Ret = DllCall("user32.dll", "uint", "CallWindowProc", "ptr", DllStructGetPtr($_LZF_CodeBuffer) + $_LZF_Decompress, _
													"ptr", DllStructGetPtr($Var), _
													"uint", $InputLen, _
													"uint", $MaxBuffer, _
													"int", 0)

	Return BinaryMid(DllStructGetData($Output, 1), 1, $Ret[0])
EndFunc

Func _LZF_Compress($Data)
	If Not IsDllStruct($_LZF_CodeBuffer) Then _LZF_Startup()

	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Return BinaryMid(Binary($InputLen), 1, 4) & _LZF_Compress_Core($Data)
EndFunc

Func _LZF_Decompress($Data)
	If Not IsDllStruct($_LZF_CodeBuffer) Then _LZF_Startup()

	$Data = Binary($Data)
	Local $OutputLen = Int(BinaryMid($Data, 1, 4))
	Return _LZF_Decompress_Core(BinaryMid($Data, 5), $OutputLen)
EndFunc
